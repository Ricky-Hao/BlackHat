environ({'HOMEPATH': '\\Users\\a9596', 'PROMPT': '$P$G', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files', 'USERPROFILE': 'C:\\Users\\a9596', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\a9596\\AppData\\Local', 'APPDATA': 'C:\\Users\\a9596\\AppData\\Roaming', 'WINDIR': 'C:\\WINDOWS', 'PATH': 'C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files\\Python 3.5\\Scripts\\;C:\\Program Files\\Python 3.5\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\', 'LOGONSERVER': '\\\\MicrosoftAccount', 'COMPUTERNAME': 'RICKY-TABLET', 'HOMEDRIVE': 'C:', 'SYSTEMROOT': 'C:\\WINDOWS', 'NUMBER_OF_PROCESSORS': '4', 'USERDOMAIN_ROAMINGPROFILE': 'RICKY-TABLET', 'PROCESSOR_LEVEL': '6', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW', 'TEMP': 'C:\\Users\\a9596\\AppData\\Local\\Temp', 'PROCESSOR_ARCHITECTURE': 'x86', 'USERDOMAIN': 'RICKY-TABLET', 'SYSTEMDRIVE': 'C:', 'PUBLIC': 'C:\\Users\\Public', 'PROGRAMFILES': 'C:\\Program Files', 'TMP': 'C:\\Users\\a9596\\AppData\\Local\\Temp', 'PROGRAMDATA': 'C:\\ProgramData', 'USERNAME': 'a9596', 'PSMODULEPATH': 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'PROCESSOR_REVISION': '3708', 'PROCESSOR_IDENTIFIER': 'x86 Family 6 Model 55 Stepping 8, GenuineIntel', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'OS': 'Windows_NT'})