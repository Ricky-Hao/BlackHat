environ({'USERPROFILE': 'C:\\Users\\a9596', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOGONSERVER': '\\\\MicrosoftAccount', 'PROGRAMFILES': 'C:\\Program Files', 'PROCESSOR_ARCHITECTURE': 'x86', 'PROMPT': '$P$G', 'NUMBER_OF_PROCESSORS': '4', 'SYSTEMDRIVE': 'C:', 'WINDIR': 'C:\\WINDOWS', 'PUBLIC': 'C:\\Users\\Public', 'APPDATA': 'C:\\Users\\a9596\\AppData\\Roaming', 'HOMEDRIVE': 'C:', 'USERDOMAIN': 'RICKY-TABLET', 'USERNAME': 'a9596', 'LOCALAPPDATA': 'C:\\Users\\a9596\\AppData\\Local', 'PROCESSOR_LEVEL': '6', 'TEMP': 'C:\\Users\\a9596\\AppData\\Local\\Temp', 'PROGRAMDATA': 'C:\\ProgramData', 'SYSTEMROOT': 'C:\\WINDOWS', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW', 'PROCESSOR_REVISION': '3708', 'PROCESSOR_IDENTIFIER': 'x86 Family 6 Model 55 Stepping 8, GenuineIntel', 'PSMODULEPATH': 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'HOMEPATH': '\\Users\\a9596', 'OS': 'Windows_NT', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'PATH': 'C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files\\Python 3.5\\Scripts\\;C:\\Program Files\\Python 3.5\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\', 'USERDOMAIN_ROAMINGPROFILE': 'RICKY-TABLET', 'COMPUTERNAME': 'RICKY-TABLET', 'TMP': 'C:\\Users\\a9596\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES': 'C:\\Program Files\\Common Files'})